# Cookbook Name:: modularit-zimbra
# Recipe:: default
# Description:: Zimbra server
#
# Copyright 2013, CanaryTek
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Add modularit-zimbra role
node.run_list << "role[modularit-zimbra]"

## Needed packages
# Zimbra dependencies
pkgs=node['modularit']['zimbra']['dependencies']
pkgs.each do |pkg|
  package pkg
end

services=node['modularit']['zimbra']['stop_services']
services.each do |srv|
  service srv do
    action [ :disable, :stop ]
  end
end

# Zimbra version
version = node['modularit']['zimbra']['version']

# Add IP host to /etc/hosts
node_ip=node['ipaddress']
hostname=%x[uname -n].chomp
hostsfile_entry node_ip do
  hostname  hostname
  action    :create_if_missing
end

# Zimbra config
template "#{Chef::Config[:file_cache_path]}/zimbra.config" do
  source "zimbra.config.erb"
  owner "root"
  group "root"
  mode 00644
  variables({
    :hostname => hostname
  })
end

# Download and install zimbra
bash "install-zimbra" do
  Chef::Log.info("Download and install zimbra. This can take a looong time")
  cwd Chef::Config[:file_cache_path]
  code <<-EOH
    wget -N "http://files2.zimbra.com/downloads/8.0.3_GA/zcs-#{version}.tgz"
    tar zxvf zcs-#{version}.tgz
    cd zcs-#{version}/packages
    yum -y localinstall #{node['modularit']['zimbra']['packages']}
  EOH
  creates "/opt/zimbra/libexec/zmsetup.pl"
end

# Configure zimbra
bash "config-zimbra" do
  cwd Chef::Config[:file_cache_path]
  code <<-EOH
    /opt/zimbra/libexec/zmsetup.pl -c #{Chef::Config[:file_cache_path]}/zimbra.config
    su zimbra -c "/opt/zimbra/bin/zmprov sp admin@#{hostname} #{node['modularit']['zimbra']['admin_pass']}"
  EOH
  creates "/opt/zimbra/conf/amavisd.conf"
end

# Sudoers file
file "/etc/sudoers.d/zimbra" do
  content <<EOF
# Generated by Chef. DO NOT CHANGE
%zimbra ALL=NOPASSWD:/opt/zimbra/libexec/zmunbound
%zimbra ALL=NOPASSWD:/opt/zimbra/libexec/zmdnscachealign *
%zimbra ALL=NOPASSWD:/opt/zimbra/amavisd/sbin/amavis-mc
%zimbra ALL=NOPASSWD:/opt/zimbra/libexec/zmstat-fd *
%zimbra ALL=NOPASSWD:/opt/zimbra/postfix/sbin/postfix, /opt/zimbra/postfix/sbin/postalias, /opt/zimbra/postfix/sbin/qshape.pl, /opt/zimbra/postfix/sbin/postconf,/opt/zimbra/postfix/sbin/postsuper
%zimbra ALL=NOPASSWD:/opt/zimbra/libexec/zmqstat,/opt/zimbra/libexec/zmmtastatus
%zimbra ALL=NOPASSWD:/opt/zimbra/libexec/zmmailboxdmgr
%zimbra ALL=NOPASSWD:/opt/zimbra/bin/zmcertmgr
%zimbra ALL=NOPASSWD:/opt/zimbra/openldap/libexec/slapd
%zimbra ALL=NOPASSWD:/opt/zimbra/libexec/zmslapd
%zimbra ALL=NOPASSWD:/opt/zimbra/nginx/sbin/nginx
EOF
  mode "0440"
end

## Rasca obj for alarms
rasca_object "SecPkgChk-zimbra" do
  check "SecPkgChk"
  format "ruby"
  content '{ 
    "syslogd" => { :ports => [ "UDP/514" ] },
    "rsyslogd" => { :ports => [ "UDP/514" ] },
    "slapd" => { :ports => [ "TCP/389" ] },
    "rsyslogd" => { :ports => [ "UDP/514" ] },
    "smtpd" => { :ports => [ "TCP/25", "TCP/587", "TCP/465" ] },
    "master" => { :ports => [ "TCP/25", "TCP/587", "TCP/465" ] },
    "httpd" => { :ports => [ "TCP/7780" ] },
    "nginx" => { :ports => [ "TCP/7143", "TCP/7143", "TCP/7110", "TCP/7995", "TCP/7993" ] },
    "java" => { :ports => [ "UDP/ANY", "TCP/80", "TCP/110", "TCP/143", "TCP/993", "TCP/995", "TCP/8101", "TCP/7071", "TCP/443", "TCP/5222", "TCP/5223", "TCP/5269", "TCP/7025", "TCP/7072", "TCP/7335", "TCP/7777", "TCP/8735", "TCP/10015", "TCP/41392", "TCP/9001", "TCP/50094", "TCP/44969", "TCP/7101", "TCP/4745", "TCP/49392", "TCP/40677", "TCP/8080", "TCP/8009", "TCP/60399", "TCP/4101", "TCP/40079", "TCP/41322", "TCP/3101", "TCP/56489" ] },
    "memcached" => { :ports => [ "TCP/11211", "UDP/11211" ] },
  }'
end

# ohai plugin to export modularit-zimbra data
cookbook_file "#{node['chef_packages']['ohai']['ohai_root']}/plugins/modularit-zimbra.rb" do
  source "ohai_modularit-zimbra.rb"
  owner "root"
  group "root"
  mode 00755
  action :create
end

